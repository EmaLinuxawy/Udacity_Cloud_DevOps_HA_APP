AWSTemplateFormatVersion: 2010-09-09
Description: Deploy project Highly Available infrastructure with CloudFormation

Parameters:
  Environment:
    Description: Environment name, used as a tag for resources
    Type: String

  ImageId:
    Description: The image id will be used to provision the EC2 (Ubuntu 18.04-amd64)
    Type: String

  VolumeSize:
    Description: Ec2 volume size
    Type: String

  InstanceType:
    AllowedValues:
      - t2.nano
      - t2.medium
      - t2.large
      - t3.medium
      - t3.large
      - t3.xlarge
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
    ConstraintDescription: ec2 instance type. t2.nano - dev instance, t3.medium - default
    Description: EC2 instance type
    Type: String

  CPUUsagePercentPolicyTargetValue:
    Description: Average CPU utilization
    Type: String

Resources:
  S3RoleEC2:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  ProfileWithRolesForApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref S3RoleEC2

  AppServer:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html && rm -rf *
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref ProfileWithRolesForApp
      SecurityGroups:
        - !ImportValue
          'Fn::Sub': 'ApplicationSecurityGroup'
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: !Ref VolumeSize

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 7
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub VPCID

  AppServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub PrivateSubs
      LaunchConfigurationName: !Ref AppServer
      MinSize: '4'
      MaxSize: '4'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
      Tags:
        - Key: Name
          Value: !Ref Environment
          PropagateAtLaunch: true

  AppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue:
            !Sub PublicSubnet1
        - Fn::ImportValue:
            !Sub PublicSubnet2
      SecurityGroups:
        - !ImportValue
          'Fn::Sub': 'LBSecurityGroupID'
      Tags:
        - Key: Name
          Value: !Ref Environment

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref AppLoadBalancer
      Port: '80'
      Protocol: HTTP

  LoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1

  WebServerCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AppServerGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: !Ref CPUUsagePercentPolicyTargetValue

Outputs:
  DNS:
    Description: LoadBalancer URL
    Value: !Join [ "", [ "http://", !GetAtt AppLoadBalancer.DNSName ] ]